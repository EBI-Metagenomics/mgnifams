{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": ". pipeline parameters",
    "description": "",
    "type": "object",
    "defs": {
        "input_output_options": {
            "title": "input_output_options",
            "type": "object",
            "description": "Define where the pipeline should find input data and save output data.",
            "default": "",
            "properties": {
                "input": {
                    "type": "string",
                    "mimetype": "text/csv",
                    "format": "file-path-pattern",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "pattern": "^\\S+\\.csv$",
                    "description": "CSV samplesheet file containing information about the MGnifams analysis pipeline input file, or sqlite db schema or folders to append data to the db.",
                    "help_text": "Use this to specify the location of your input CSV file containing amino acid sequences (protein_input) for the main execution mode. Otherwise, give the path to the data base schema.sqlite file for db creation, or location of tables to append new data to the db.",
                    "fa_icon": "fas fa-file-csv"
                },
                "mode": {
                    "type": "string",
                    "default": "run_mgnifams_pipeline",
                    "description": "Specifies the mode in which the pipeline will be run",
                    "enum": ["run_mgnifams_pipeline", "update_mgnifams_db", "initialise_mgnifams_db"],
                    "fa_icon": "fas fa-cogs"
                },
                "fasta_input_mode": {
                    "type": "boolean",
                    "default": false,
                    "description": "If this flag is set, the pipeline starts from a fasta-file, without executing the preprocessing steps required for the sequence_explorer_protein file from MGnify proteins."
                },
                "esm_conda_path": {
                    "type": "string",
                    "description": "predict_structures ESMfold conda env"
                },
                "db_config_file": {
                    "type": "string",
                    "description": "secrets for sqlite db"
                },
                "db_schema_file": {
                    "type": "string",
                    "description": "schema for sqlite db"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            },
            "required": [
                "input",
                "esm_conda_path",
                "outdir"
            ]
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "generic_options",
            "type": "object",
            "description": "General",
            "default": "",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        },
        "clustering_params": {
            "title": "clustering_params",
            "type": "object",
            "description": "Parameters for setup_clusters subworkflow",
            "properties": {
                "compress_mode": {
                    "type": "string",
                    "default": "none",
                    "description": "compression mode of starting CSV input"
                },
                "min_sequence_length": {
                    "type": "integer",
                    "default": 100,
                    "description": "Sequence (and slice) length threshold to continue to clustering"
                },
                "input_csv_chunk_size": {
                    "type": "integer",
                    "default": 50000000,
                    "description": "Chunk size for parallel slicing and filtering of sequence space"
                },
                "linclust_seq_identity": {
                    "type": "number",
                    "default": 0.5,
                    "description": "mmseqs parameter for minimum sequence identity",
                    "help_text": "Minimum sequence identity required for clustering. The mmseqs default is 0.9, but protein families contain way more diverse sequences."
                },
                "linclust_coverage": {
                    "type": "number",
                    "default": 0.9,
                    "description": "mmseqs parameter for minimum sequence coverage ratio",
                    "help_text": "Minimum sequence length coverage required for clustering"
                },
                "linclust_cov_mode": {
                    "type": "integer",
                    "default": 0,
                    "description": "mmseqs parameter for coverage mode: 0 for both, 1 for target and 2 for query sequence",
                    "help_text": "Defined by the number of aligned residue pairs divided by 0: the maximum of the length of query/centre and target/non-centre sequences, 1: the length of the target/non-centre sequence, 2: the length of the query/centre"
                },
                "minimum_members": {
                    "type": "integer",
                    "default": 25,
                    "description": "Minimum clustering chunk size threshold to proceed with family generation.",
                    "help_text": "This is an initial filter for the mmseqs clustering results. The lower the threshold, the more families will be generated."
                },
                "clusters_chunk_size": {
                    "type": "integer",
                    "default": 30,
                    "description": "Chunk size to break the MMseqs clustering into, to then feed family generation in parallel"
                }
            }
        },
        "family_generation_params": {
            "title": "family_generation_params",
            "type": "object",
            "description": "Parameters for generate_nonredundant_families subworkflow",
            "properties": {
                "hmmsearch_evalue_cutoff": {
                    "type": "number",
                    "default": 0.001,
                    "description": "hmmsearch e-value cutoff threshold for reported results"
                },
                "redundant_length_threshold": {
                    "type": "number",
                    "default": 0.9,
                    "description": "Minimum length percentage of env hit against query HMM, to deem family redundant and add for removal"
                },
                "starting_id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Integer id of the first family to be generated. The rest are iteratively incremented by one",
                    "help_text": "Need to be manually update this parameter for subsequent releases of the db. E.g. the first version had 6096 families, so need to set this to 6097 in the v2 run"
                }
            }
        },
        "annotation_params": {
            "title": "annotation_params",
            "type": "object",
            "description": "Parameters for annotate_families subworkflow",
            "properties": {
                "hh_mode": {
                    "type": "string",
                    "default": "hhblits",
                    "description": "hhblits (fast) or hhsearch (sensitive)"
                },
                "db_name": {
                    "type": "string",
                    "default": "pfam",
                    "description": "db used in hhblits/hhsearch"
                },
                "pdb_chunk_size": {
                    "type": "integer",
                    "default": 50,
                    "description": "Chunk size for parallel structure prediction"
                },
                "pdb_chunk_size_long": {
                    "type": "integer",
                    "default": 10,
                    "description": "Chunk size for parallel structure prediction for long sequences"
                },
                "compute_mode": {
                    "type": "string",
                    "default": "gpu",
                    "description": "GPU or CPU mode, depending on sequence length"
                }
            }
        },
        "export_data_params": {
            "title": "export_data_params",
            "type": "object",
            "description": "Parameters for export_data subworkflow",
            "properties": {
                "query_result_chunks": {
                    "type": "integer",
                    "default": 100,
                    "description": "Chunk size for parallel data exporting (biomes and domains)"
                }
            }
        },
        "reference_databases": {
            "title": "reference_databases",
            "type": "object",
            "description": "Paths to downloaded databases used by the pipeline.",
            "default": "",
            "properties": {
                "hhdb_folder_path": {
                    "type": "string",
                    "description": "annotate_models"
                },
                "foldseek_db_path": {
                    "type": "string",
                    "description": "annotate_structures"
                }
            },
            "required": [
                "hhdb_folder_path",
                "foldseek_db_path"
            ]
        }
    },
    "allOf": [
        {
            "$ref": "#/defs/input_output_options"
        },
        {
            "$ref": "#/defs/institutional_config_options"
        },
        {
            "$ref": "#/defs/generic_options"
        },
        {
            "$ref": "#/defs/clustering_params"
        },
        {
            "$ref": "#/defs/family_generation_params"
        },
        {
            "$ref": "#/defs/annotation_params"
        },
        {
            "$ref": "#/defs/export_data_params"
        },
        {
            "$ref": "#/defs/reference_databases"
        }
    ]
}