params {

    // Input options
    input            = 'assets/samplesheet.csv'
    fasta_input_mode = false

    // SETUP_CLUSTERS
    // extract_unannotated_fasta
    compress_mode          = 'none' // 1. gz, 2. bz2 or 3. anything else (ignores decompress)
    min_sequence_length    = 100
    input_csv_chunk_size   = 50000000
    // execute_clustering
    linclust_seq_identity  = 0.5
    linclust_coverage      = 0.9
    linclust_cov_mode      = 0

    // GENERATE_NONREDUNDANT_FAMILIES
    // generate_families_parallel
    minimum_members       = 50
    num_cluster_chunks    = 600 // num_jobs = ceil(18242 / 100), 18242 initial clusters with at least 50 members each
    // flag_transmembrane
    deeptmhmm_chunk_size  = 100
    tm_fraction_threshold = 0.4
    // remove_redundancy
    redundant_threshold   = 0.95
    similarity_threshold  = 0.5

    // ANNOTATE_FAMILIES
    // annotate_models
    hh_mode             = "hhblits"
    hhdb_folder_path    = "/hps/nobackup/rdf/metagenomics/service-team/ref-dbs/hh/pfamA_35.0"
    db_name             = "pfam"
    // predict_structures
    pdb_chunk_size      = 500
    pdb_chunk_size_long = 10
    compute_mode        = "gpu"
    esm_conda_path      = '/hps/nobackup/rdf/metagenomics/service-team/users/vangelis/miniconda3/envs/esmfold_gpu'
    // annotate_structures
    foldseek_db_path    = '/hps/nobackup/rdf/metagenomics/service-team/ref-dbs/foldseek/8-ef4e960'

    // EXPORT_DB
    db_config_file = "/hps/nobackup/rdf/metagenomics/service-team/users/vangelis/mgnifams/assets/db_config.ini"
    db_schema_file = "/hps/nobackup/rdf/metagenomics/service-team/users/vangelis/mgnifams/assets/db_schema.sqlite"

    // Boilerplate options
    outdir           = '/nfs/production/rdf/metagenomics/users/vangelis/mgnifams/output'
    publish_dir_mode = 'copy'
    help             = false

    // Schema validation default options
    validate_params  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {

    slurm {
        executor {
            name              = "slurm"
            queueSize         = 30
            queueGlobalStatus = true
        }
        singularity.cacheDir = "/hps/scratch/singularity/$USER"
        conda.cacheDir       = "/hps/nobackup/rdf/metagenomics/service-team/users/vangelis/miniconda3/envs"
        process {
            queue          = 'standard'
            cache          = "lenient"
            clusterOptions = { "-C intel" }

            withLabel: gpu {
                clusterOptions = { "--gres=gpu:1" }
            }
        }
        workDir = "/hps/nobackup/rdf/metagenomics/service-team/users/vangelis/work_mgnifams/"
    }
    singularity {
        singularity.enabled     = true
        singularity.pullTimeout = "3 hours"
    }
    conda {
        conda.enabled = true
    }
    wave {
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
        wave.build.repository   = 'docker.io/vagkaratzas'
    }
    test_local { includeConfig 'conf/test_local.config' }

}

docker.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-schema@2.0.0'
}

manifest {
    name            = 'ebi-metagenomics/mgnifams'
    author          = """@vagkaratzas"""
    homePage        = 'https://github.com/ebi-metagenomics/mgnifams'
    description     = """MGnify-derived protein families"""
    version         = '1.2.0'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
