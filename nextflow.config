/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ebi-metagenomics/mgnifams Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input            = 'assets/samplesheet.csv'
    fasta_input_mode = false

    // SETUP_CLUSTERS
    // extract_unannotated_fasta
    compress_mode          = 'none' // 1. gz, 2. bz2 or 3. anything else (ignores decompress)
    min_sequence_length    = 100
    input_csv_chunk_size   = 50000000
    // execute_clustering
    linclust_seq_identity  = 0.5
    linclust_coverage      = 0.9
    linclust_cov_mode      = 0

    // GENERATE_NONREDUNDANT_FAMILIES
    // generate_families_parallel
    minimum_members       = 50
    num_cluster_chunks    = 600 // num_jobs = ceil(18242 / 100), 18242 initial clusters with at least 50 members each
    // flag_transmembrane
    deeptmhmm_chunk_size  = 100
    tm_fraction_threshold = 0.4
    // remove_redundancy
    redundant_threshold   = 0.95
    similarity_threshold  = 0.5

    // ANNOTATE_FAMILIES
    // annotate_models
    hh_mode             = "hhblits"
    db_name             = "pfam"
    // predict_structures
    pdb_chunk_size      = 500
    pdb_chunk_size_long = 10
    compute_mode        = "gpu"

    // Boilerplate options
    publish_dir_mode = 'copy'
    help             = false

    // Schema validation default options
    validate_params  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = true // TODO false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        singularity.pullTimeout = "3 hours"
        conda.enabled           = true // TODO false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test { includeConfig 'conf/test.config' }
}

docker.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-schema@2.0.0'
}

manifest {
    name            = 'ebi-metagenomics/mgnifams'
    author          = """@vagkaratzas"""
    homePage        = 'https://github.com/ebi-metagenomics/mgnifams'
    description     = """MGnify-derived protein families"""
    version         = '2.0.0'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
